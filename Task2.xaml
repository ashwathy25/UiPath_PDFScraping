<Activity mc:Ignorable="sap sap2010" x:Class="Task2" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="703,659" sap2010:WorkflowViewState.IdRef="Task2_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bec="clr-namespace:BalaReva.Excel.Charts;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>BalaReva.Excel.Charts</x:String>
      <x:String>BalaReva.Excel.Interfaces</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Task2: PDF Extraction from Google Drive and Visulization" sap:VirtualizedContainerService.HintSize="242,494" sap2010:WorkflowViewState.IdRef="Sequence_24">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="setFolderID" />
      <Variable x:TypeArguments="x:String" Name="myOutput" />
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="x:String" Name="x_axis" />
      <Variable x:TypeArguments="x:String" Name="y_axis" />
      <Variable x:TypeArguments="s:String[]" Name="x_axis_split" />
      <Variable x:TypeArguments="sd1:DataTable" Default="[New DataTable]" Name="vDT" />
      <Variable x:TypeArguments="x:Int32" Name="vCounter" />
      <Variable x:TypeArguments="s:String[]" Name="y_axis_split" />
      <Variable x:TypeArguments="x:String" Name="strDT" />
      <Variable x:TypeArguments="x:String" Name="vExcelPath" />
      <Variable x:TypeArguments="x:String" Default="Sheet1" Name="vExcelSheet" />
      <Variable x:TypeArguments="x:String" Default="A1:B13" Name="vExcelRange" />
      <Variable x:TypeArguments="x:String" Default="478097024954-uc95m7fljbume99pishbda8g87g8v4t4.apps.googleusercontent.com" Name="vGsuiteClientID" />
      <Variable x:TypeArguments="x:String" Default="JmWslT1gSTtRxoPxTJajRJ7C" Name="vGsuitePassword" />
      <Variable x:TypeArguments="x:String" Default="1xbbcWR3UqY8PMXN0Bm5u4HAezl0tbaa7" Name="vGsuiteFileID" />
      <Variable x:TypeArguments="x:Boolean" Name="vBool" />
      <Variable x:TypeArguments="x:String" Name="vFolderPath" />
      <Variable x:TypeArguments="x:String" Name="vFileName">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Bank_Account_Statement.pdf</Literal>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Download PDF file from Google Drive" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Download File: Start" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Downloading File from Google Drive: Started&quot;]" />
      <Sequence DisplayName="Folder Information" sap:VirtualizedContainerService.HintSize="755,383" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[vFolderPath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[setFolderID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[vFolderPath+"\"+vFileName]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Download File: Start" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Please find your files under the path &quot;+vFolderPath]" />
      </Sequence>
      <uga:GSuiteApplicationScope ApiKey="{x:Null}" ContinueOnError="{x:Null}" Folder="{x:Null}" KeyPath="{x:Null}" Password="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" AuthenticationType="OAuthClientID" CredentialID="[vGsuiteClientID]" CredentialSecret="[vGsuitePassword]" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="755,51" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_2" KeyType="JSON" Services="Unselected">
        <uga:GSuiteApplicationScope.AuthenticationScopes>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
            <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.appdata</InArgument>
            <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.file</InArgument>
            <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive</InArgument>
            <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.readonly</InArgument>
          </scg:List>
        </uga:GSuiteApplicationScope.AuthenticationScopes>
        <uga:GSuiteApplicationScope.Body>
          <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,171" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uga:DownloadFile ContinueOnError="{x:Null}" AuthScopesInvalid="False" DisplayName="Download PDF File from Google Drive" FileId="[vGsuiteFileID]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="DownloadFile_2" LocalPath="[setFolderID]" SupportsTeamDrives="False" />
            </Sequence>
          </ActivityAction>
        </uga:GSuiteApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </uga:GSuiteApplicationScope>
      <Assign sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[vBool]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[System.IO.File.Exists(setFolderID)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[vBool=True]" DisplayName="Check if File is Downloaded" sap:VirtualizedContainerService.HintSize="755,393" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <ui:LogMessage DisplayName="Download File: End" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Downloading File from Google Drive: Completed&quot;]" />
        </If.Then>
        <If.Else>
          <Sequence DisplayName="File Not Found" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Download File: End" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Downloading File from Google Drive not Completed check if file has been dowloaded&quot;]" />
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[New System.IO.FileNotFoundException()]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="Downloading File from Google Drive not Completed check if file has been dowloaded" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
    <Sequence DisplayName="Extract from PDF using Screen Scraping" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="552,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Extracting Data from PDF: Started &quot;]" />
      <ui:StartProcess Arguments="[vFileName]" DisplayName="Set PDF file path" FileName="C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\acrord32.exe" sap:VirtualizedContainerService.HintSize="552,87" sap2010:WorkflowViewState.IdRef="StartProcess_2" WorkingDirectory="[vFolderPath]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:StartProcess>
      <ui:OpenApplication ApplicationWindow="{x:Null}" TimeoutMS="{x:Null}" Arguments="[setFolderID]" DisplayName="Open Application: Bank Account PDF" FileName="C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\acrord32.exe" sap:VirtualizedContainerService.HintSize="552,1100" sap2010:WorkflowViewState.IdRef="OpenApplication_2" InformativeScreenshot="be0d40e99a0cf3f0f227ba2c8eff1ea2" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Adobe Acrobat Reader DC' /&gt;" WorkingDirectory="[vFolderPath]">
        <ui:OpenApplication.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Get Values in Date Column " sap:VirtualizedContainerService.HintSize="518,954" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="variable2" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Extract Data from PDF using Screen Scraping" sap:VirtualizedContainerService.HintSize="476,862" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:GenericValue" Name="AvlAvview" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'BankAccou Acrobatsd'" sap:VirtualizedContainerService.HintSize="434,770" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="69a0d3bc66b0f53acb7ae40b7c36cf83" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Adobe Acrobat Reader DC' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,624" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Navigate to Bottom of Page" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d9d7c82c-e7c3-44ff-9e1e-9c7c404561e9">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Extract Text for Column Date" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2" Text="[x_axis]">
                                <ui:GoogleOCR.AllowedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.AllowedCharacters>
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="52229d73-704b-45ed-b390-5d91dfa0bf15" InformativeScreenshot="fd56f6f3d4c7b974d85e21bb387bd5d5" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl name='Your Transaction DetailsDateDetailsWithdrawalsDepositsBalanceApr*' role='text' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="2, 87, 62, 248" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[x_axis]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Extract Text for Column Balance" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2" Text="[y_axis]">
                                <ui:GoogleOCR.AllowedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.AllowedCharacters>
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="52229d73-704b-45ed-b390-5d91dfa0bf15" InformativeScreenshot="dc41e898359051e6bc8993a97bb4a06d" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl name='Your Transaction DetailsDateDetailsWithdrawalsDepositsBalanceApr*' role='text' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="879, 85, 93, 249" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[y_axis]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                </ui:WindowScope>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:OpenApplication.Body>
      </ui:OpenApplication>
      <ui:CloseApplication DisplayName="Close Application: Bank Account PDF" sap:VirtualizedContainerService.HintSize="552,106" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
        <ui:CloseApplication.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="99dadcbb-8702-4331-a0c9-3f231d90d701" InformativeScreenshot="212d7b3b505712383e5b4ae468d868ef" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Adobe Acrobat Reader DC' /&gt;">
            <ui:Target.TimeoutMS>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:Target.TimeoutMS>
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:CloseApplication.Target>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CloseApplication>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="552,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Extracting Data from PDF: Completed &quot;]" />
    </Sequence>
    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
    <Sequence DisplayName="Generate BarChart in Excel" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_23">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="445,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Generating Bar Graph: Started &quot;]" />
      <Assign sap:VirtualizedContainerService.HintSize="445,60" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[x_axis_split]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[x_axis.Split(Environment.NewLine.ToArray, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="445,60" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[y_axis_split]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[y_axis.Split(Environment.NewLine.ToArray, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:BuildDataTable DataTable="[vDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="445,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;X_Axis&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Y_Axis&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <ui:GenerateDataTable ColumnSeparators="{x:Null}" ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" CSVParsing="True" DataTable="[vDt]" DisplayName="Generate Data Table" sap:VirtualizedContainerService.HintSize="445,51" sap2010:WorkflowViewState.IdRef="GenerateDataTable_2" Input="[x_axis]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GenerateDataTable>
      <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="Y_axis" DataTable="[vDT]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="445,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" MaxLength="100" Unique="False" />
      <ui:ForEachRow CurrentIndex="[vCounter]" DataTable="[vDT]" DisplayName="Add values into DataTable" sap:VirtualizedContainerService.HintSize="445,51" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd1:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[row("Y_Axis")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[y_axis_split(vCounter)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <Assign DisplayName="Rename the column in DataTable" sap:VirtualizedContainerService.HintSize="445,60" sap2010:WorkflowViewState.IdRef="Assign_15">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[vDT.Columns("Column1").ColumNname]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">X_Axis</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="445,60" sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[vExcelPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[vFolderPath+"\Date_Balance_XL.xlsx"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="445,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[vExcelPath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Basic" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="True" DataTable="[vDT]" DisplayName="Write DataTable into the Excel" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[vExcelSheet]" StartingCell="A1" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <bec:ColumnChart ChartTitle="{x:Null}" ExecutionResult="{x:Null}" FilePassword="{x:Null}" ImageCopy="{x:Null}" LegendRange="{x:Null}" ModifyPassword="{x:Null}" CellRange="[vExcelRange]" ChartType="Column3DClustered" Delay="3" DisplayName="Using BalaReva generate Bar Graph" FilePath="[vExcelPath]" sap:VirtualizedContainerService.HintSize="445,70" sap2010:WorkflowViewState.IdRef="ColumnChart_1" SheetName="[vExcelSheet]" ShowLegendKey="True" ShowValuePosition="OutsideEnd" ShowValueTextOrientation="HorizontalRotatedFarEast">
        <bec:ColumnChart.Options>
          <bec:ShowOptions AutoText="True" DataLabelsType="ShowPercent" HasLeaderLines="False" LegendKey="ShowValue" Separator="" ShowBubbleSize="False" ShowCategoryName="False" ShowLegend="True" ShowPercentage="False" ShowSeriesName="True" ShowValue="True" />
        </bec:ColumnChart.Options>
        <bec:ColumnChart.Size>
          <bec:ChartSize Height="250" Left="50" Top="50" Width="250" />
        </bec:ColumnChart.Size>
      </bec:ColumnChart>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="445,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Generating Bar Graph: Completed &quot;]" />
    </Sequence>
  </Sequence>
</Activity>